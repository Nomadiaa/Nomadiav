
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.9.0
 * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
 */
Prisma.prismaVersion = {
  client: "6.9.0",
  engine: "81e4af48011447c3cc503a190e86995b66d2a28e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  prenom: 'prenom',
  email: 'email',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt',
  bio: 'bio',
  instagram: 'instagram',
  facebook: 'facebook',
  youtube: 'youtube',
  isPublic: 'isPublic',
  adventurerType: 'adventurerType',
  avatar: 'avatar',
  coverImage: 'coverImage'
};

exports.Prisma.DestinationScalarFieldEnum = {
  id: 'id',
  titre: 'titre',
  pays: 'pays',
  continent: 'continent',
  description: 'description',
  imagePrincipale: 'imagePrincipale',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  utilisateurId: 'utilisateurId'
};

exports.Prisma.SectionScalarFieldEnum = {
  id: 'id',
  titre: 'titre',
  contenu: 'contenu',
  ordre: 'ordre',
  type: 'type',
  destinationId: 'destinationId',
  updatedAt: 'updatedAt'
};

exports.Prisma.BulletPointScalarFieldEnum = {
  id: 'id',
  contenu: 'contenu',
  ordre: 'ordre',
  sectionId: 'sectionId'
};

exports.Prisma.GroupedBulletPointScalarFieldEnum = {
  id: 'id',
  titre: 'titre',
  ordre: 'ordre',
  sectionId: 'sectionId'
};

exports.Prisma.BulletPointContentScalarFieldEnum = {
  id: 'id',
  contenu: 'contenu',
  ordre: 'ordre',
  groupId: 'groupId'
};

exports.Prisma.ImageScalarFieldEnum = {
  id: 'id',
  url: 'url',
  alt: 'alt',
  sectionId: 'sectionId'
};

exports.Prisma.ChecklistScalarFieldEnum = {
  id: 'id',
  titre: 'titre',
  userId: 'userId',
  voyageId: 'voyageId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ChecklistCategoryScalarFieldEnum = {
  id: 'id',
  titre: 'titre',
  icone: 'icone',
  checklistId: 'checklistId'
};

exports.Prisma.ChecklistItemScalarFieldEnum = {
  id: 'id',
  titre: 'titre',
  description: 'description',
  isChecked: 'isChecked',
  reminderDate: 'reminderDate',
  categoryId: 'categoryId'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  destinationId: 'destinationId',
  rating: 'rating',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewLikeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  reviewId: 'reviewId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  nom: 'nom',
  prenom: 'prenom',
  email: 'email',
  password: 'password',
  bio: 'bio',
  instagram: 'instagram',
  facebook: 'facebook',
  youtube: 'youtube',
  adventurerType: 'adventurerType',
  avatar: 'avatar',
  coverImage: 'coverImage'
};

exports.Prisma.DestinationOrderByRelevanceFieldEnum = {
  id: 'id',
  titre: 'titre',
  pays: 'pays',
  continent: 'continent',
  description: 'description',
  imagePrincipale: 'imagePrincipale'
};

exports.Prisma.SectionOrderByRelevanceFieldEnum = {
  id: 'id',
  titre: 'titre',
  contenu: 'contenu',
  destinationId: 'destinationId'
};

exports.Prisma.BulletPointOrderByRelevanceFieldEnum = {
  id: 'id',
  contenu: 'contenu',
  sectionId: 'sectionId'
};

exports.Prisma.GroupedBulletPointOrderByRelevanceFieldEnum = {
  id: 'id',
  titre: 'titre',
  sectionId: 'sectionId'
};

exports.Prisma.BulletPointContentOrderByRelevanceFieldEnum = {
  id: 'id',
  contenu: 'contenu',
  groupId: 'groupId'
};

exports.Prisma.ImageOrderByRelevanceFieldEnum = {
  id: 'id',
  url: 'url',
  alt: 'alt',
  sectionId: 'sectionId'
};

exports.Prisma.ChecklistOrderByRelevanceFieldEnum = {
  id: 'id',
  titre: 'titre',
  voyageId: 'voyageId'
};

exports.Prisma.ChecklistCategoryOrderByRelevanceFieldEnum = {
  id: 'id',
  titre: 'titre',
  icone: 'icone',
  checklistId: 'checklistId'
};

exports.Prisma.ChecklistItemOrderByRelevanceFieldEnum = {
  id: 'id',
  titre: 'titre',
  description: 'description',
  categoryId: 'categoryId'
};

exports.Prisma.ReviewOrderByRelevanceFieldEnum = {
  id: 'id',
  destinationId: 'destinationId',
  content: 'content'
};

exports.Prisma.ReviewLikeOrderByRelevanceFieldEnum = {
  id: 'id',
  reviewId: 'reviewId'
};
exports.Role = exports.$Enums.Role = {
  user: 'user',
  admin: 'admin'
};

exports.SectionType = exports.$Enums.SectionType = {
  GUIDE: 'GUIDE',
  PRESENTATION: 'PRESENTATION',
  ACCES: 'ACCES',
  FORMALITES: 'FORMALITES',
  CONSEILS: 'CONSEILS',
  POURQUOI: 'POURQUOI'
};

exports.Prisma.ModelName = {
  User: 'User',
  Destination: 'Destination',
  Section: 'Section',
  BulletPoint: 'BulletPoint',
  GroupedBulletPoint: 'GroupedBulletPoint',
  BulletPointContent: 'BulletPointContent',
  Image: 'Image',
  Checklist: 'Checklist',
  ChecklistCategory: 'ChecklistCategory',
  ChecklistItem: 'ChecklistItem',
  Review: 'Review',
  ReviewLike: 'ReviewLike'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
